// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RestorationBot.Database.DataContext;

#nullable disable

namespace RestorationBot.Database.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RestorationBot.Models.TrainingReport", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SportsmenId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("TrainingDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("SportsmenId");

                    b.ToTable("TrainingReports");
                });

            modelBuilder.Entity("RestorationBot.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("RestorationStep")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("TelegramId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RestorationBot.Models.TrainingReport", b =>
                {
                    b.HasOne("RestorationBot.Models.User", "Sportsmen")
                        .WithMany("TrainingReports")
                        .HasForeignKey("SportsmenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("RestorationBot.Models.DataModels.TrainingReportData", "TrainingReportData", b1 =>
                        {
                            b1.Property<Guid>("TrainingReportId")
                                .HasColumnType("uuid");

                            b1.Property<double>("BloodPressure")
                                .HasColumnType("double precision");

                            b1.Property<double>("HeartRate")
                                .HasColumnType("double precision");

                            b1.HasKey("TrainingReportId");

                            b1.ToTable("TrainingReports");

                            b1.WithOwner()
                                .HasForeignKey("TrainingReportId");
                        });

                    b.Navigation("Sportsmen");

                    b.Navigation("TrainingReportData")
                        .IsRequired();
                });

            modelBuilder.Entity("RestorationBot.Models.User", b =>
                {
                    b.Navigation("TrainingReports");
                });
#pragma warning restore 612, 618
        }
    }
}
